#!/bin/bash

# Exit build script on first failure.
set -e

# Echo commands to stdout.
set -x

# Exit on unset variable.
set -u

CHECK_INIT_FILE_EXISTS=$(find . -type f -name '*.py' -not -path "./venv/*" | sed -r 's|/[^/]+$||' | sort | uniq | xargs -I % bash -c """
  if [ ! -f %/__init__.py ]; then
    echo 1
  else
    echo 0
  fi
""" | tr -d '\n')

[[ "$CHECK_INIT_FILE_EXISTS" =~ "1" ]] && exit 1

# Location of app source files.
SOURCE_DIR="app"

UPDATE_SCRIPT="scripts/update-service"

# Location of virtualenv.
VIRTUALENV_DIR=venv

# Delete pyc files from previous builds.
find . \
  -name "*.pyc" \
  -type f \
  -not -path "./${VIRTUALENV_DIR}/*" \
  -delete

# Run unit tests and calculate code coverage.
coverage run \
  --source "$SOURCE_DIR" \
  --omit "*_test.py" \
  -m unittest discover --pattern "*_test.py"
coverage report

# Check that source has correct formatting.
yapf --diff --recursive ./

# Check correct sorting for imports.
isort \
  --recursive \
  --force-single-line-imports \
  --diff \
  --check-only \
  --skip-glob=third_party/* \
  --skip-glob=venv/*

# Run static analysis for Python bugs/cruft.
pyflakes "${SOURCE_DIR}/" "${UPDATE_SCRIPT}"

# Check for other style violations.
PYTHONPATH="${SOURCE_DIR}" pylint "${SOURCE_DIR}" "${UPDATE_SCRIPT}"
