#!/bin/bash
#
# Sets a static local IP address for the TinyPilot device.

# Exit on first error.
set -e

print_help() {
  cat << EOF
Usage: ${0##*/} --router router_ip --ip static_ip [--dns dns_ip]...
[--interface name]

Sets a static local IP address for the TinyPilot device.
  --router router_ip: The IP address of the local router.
  --ip static_ip: The static IP address to assign to the TinyPilot device.
  --dns dns_ip: (optional) A DNS server to use to resolve domain names.
  --interface name: (optional) The interface to configure. Defaults to eth0.
  --help: Display this help text.

Multiple DNS servers can be provided. If unspecified, defaults to the router's
DNS, then Google (8.8.8.8), then Cloudflare (1.1.1.1).
EOF
}

# Use the same values as the previous script for compatibility.
readonly CONFIG_FILE="/etc/dhcpcd.conf"
readonly MARKER_START='# --- AUTOGENERATED BY TINYPILOT - START ---'
readonly MARKER_END='# --- AUTOGENERATED BY TINYPILOT - END ---'

# Parse command-line arguments.
if ! NEW_ARGS=$(getopt -q -o "" -l "ip:,router:,dns:,interface:" -- "$@"); then
  print_help
  exit 1
fi

# Process command-line arguments.
eval set -- "${NEW_ARGS}"
while true; do
  case "$1" in
    --ip)
      if [[ -z "${IP_ADDRESS}" ]] ; then
        readonly IP_ADDRESS="$2"
      else
        echo "Only one static IP address should be provided." >&2
        exit 1
      fi
      shift 2
      ;;
    --router)
      if [[ -z "${ROUTERS}" ]] ; then
        readonly ROUTERS="$2"
      else
        echo "Only one router IP address should be provided." >&2
        exit 1
      fi
      shift 2
      ;;
    --dns)
      if [[ -z "${DNS}" ]] ; then
        DNS="$2"
      else
        DNS="${DNS} $2"
      fi
      shift 2
      ;;
    --interface)
      if [[ -z "${INTERFACE}" ]] ; then
        readonly INTERFACE="$2"
      else
        echo "Only one interface should be provided." >&2
        exit 1
      fi
      shift 2
      ;;
    --)
      shift
      break
      ;;
  esac
done

# There must be at least a static IP address and a router IP address.
if [[ -z "${IP_ADDRESS}" ]] || [[ -z "${ROUTERS}" ]] ; then
  print_help
  exit 1
fi

# Default DNS settings.
if [[ -z "${DNS}" ]] ; then
  DNS="${ROUTERS} 8.8.8.8 1.1.1.1"
fi
readonly DNS

# Default interface.
if [[ -z "${INTERFACE}" ]] ; then
  readonly INTERFACE="eth0"
fi

# Use the unset-static-ip script to remove any existing configuration.
readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
"${SCRIPT_DIR}"/unset-static-ip --quiet --interface ${INTERFACE}

# Only proceed if no other configuration exists.
if grep -q "^interface ${INTERFACE}" "${CONFIG_FILE}" ; then
  echo "An existing configuration exists for ${INTERFACE}." >&2
  echo "Please remove the existing configuration and try again." >&2
  exit 1
fi

# Write out the new configuration.
{
  echo "${MARKER_START}"
  echo "interface ${INTERFACE}"
  echo "static ip_address=${IP_ADDRESS}"
  echo "static routers=${ROUTERS}"
  echo "static domain_name_servers=${DNS}"
  echo "${MARKER_END}"
} | sudo tee --append "${CONFIG_FILE}" > /dev/null

# Changes require a reboot so prompt the user.
echo "A static local IP address has been set."
echo "  Interface: ${INTERFACE}"
echo "  IP Address: ${IP_ADDRESS}"
echo "  Routers: ${ROUTERS}"
echo "  Domain Name Servers: ${DNS}"
echo ""
echo "Reboot your TinyPilot device to apply the changes."
