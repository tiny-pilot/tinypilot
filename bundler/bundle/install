#!/bin/bash

# Installs TinyPilot and all dependencies.

# Exit on first error.
set -e

# Exit on unset variable.
set -u

# Echo commands before executing them, by default to stderr.
set -x

# The filename of the TinyPilot Debian package.
TINYPILOT_DEBIAN_PACKAGE="$(ls tinypilot*.deb)"
readonly TINYPILOT_DEBIAN_PACKAGE

# Prevent installation on the Raspberry Pi 3.
if grep -q "^Model *: Raspberry Pi 3" /proc/cpuinfo ; then
  echo 'You are trying to install on incompatible hardware.' >&2
  echo 'Visit https://github.com/tiny-pilot/tinypilot/ for more details.' >&2
  exit 1
fi

# Prevent installation on OS versions lower than Raspberry Pi OS 11 "Bullseye".
# Note: the distro ID is called "Raspbian" because the 32-bit version of the
# Raspberry Pi operating system is based on Raspbian repos (an independent
# open-source project). Similarly, the the 64-bit version of the Raspberry Pi
# operating system is based on Debian and its distro ID would be "Debian".
if [[ "$(lsb_release --id --short)" == 'Raspbian' ]] \
    && (( "$(lsb_release --release --short)" < 11 )); then
  echo "TinyPilot no longer supports Raspberry Pi OS 10 \"Buster\" or lower." >&2
  echo "To install TinyPilot, you'll need to upgrade your operating system to Raspberry Pi OS 11 \"Bullseye\"." >&2
  exit 1
fi

# Abort installation if the read-only filesystem is enabled
if grep -q "boot=overlay" /proc/cmdline ; then
  echo 'The read-only filesystem is enabled.' >&2
  echo 'Disable the read-only filesystem before proceeding.' >&2
  echo 'See https://tinypilotkvm.com/faq/read-only-filesystem for details.' >&2
  exit 1
fi

# Bootstrap environment for installation.
apt-get update --allow-releaseinfo-change-suite
apt-get install -y \
  git \
  libffi-dev \
  libssl-dev \
  python3-dev \
  python3-venv \
  lsb-release

python3 -m venv venv
# shellcheck disable=SC1091 # Donâ€™t follow sourced script.
. venv/bin/activate
# Ensure we're using a version of pip that can use binary wheels where available
# instead of building the packages locally.
pip install "pip>=21.3.1"
pip install -r requirements.txt

# If there's an existing TinyPilot settings file, pass it to Ansible to override
# default vars.
readonly TINYPILOT_SETTINGS_FILE='/home/tinypilot/settings.yml'
EXTRA_PLAYBOOK_FLAGS=()
# Check that TinyPilot settings file exists and is non-empty.
if [[ -s "${TINYPILOT_SETTINGS_FILE}" ]]; then
  EXTRA_PLAYBOOK_FLAGS+=('--extra-vars' "@${TINYPILOT_SETTINGS_FILE}")

  echo "Final install settings:"
  cat "${TINYPILOT_SETTINGS_FILE}"
fi
readonly EXTRA_PLAYBOOK_FLAGS

# Run Ansible.
ansible-playbook \
  --inventory localhost, \
  install.yml \
  "${EXTRA_PLAYBOOK_FLAGS[@]}"

# Install TinyPilot Debian package and resolve missing dependencies.
apt-get install -y \
  "./${TINYPILOT_DEBIAN_PACKAGE}"
