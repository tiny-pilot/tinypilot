#!/bin/bash

# Creates a TinyPilot installation bundle from the bundle/ folder.
# Fetches all required dependencies automatically.

# Exit on first error.
set -e

# Exit on unset variable.
set -u

# Echo commands to stdout.
set -x

# TODO (jotaen): parameterize script to make the installation work for
#                TinyPilot Pro as well.

# TODO: Adjust the workflow so that we build Debian packages as part of the same
# workflow on the same system that we build the bundle so that we don't have to
# retrieve the Debian package file from a remote URL.
readonly PKG_URL_TINYPILOT='https://packages.tinypilotkvm.com/community/tinypilot-1.7.1-1-armhf.deb'
readonly REPO_ANSIBLE_TINYPILOT='https://github.com/tiny-pilot/ansible-role-tinypilot.git'
readonly REPO_ANSIBLE_NGINX='https://github.com/tiny-pilot/ansible-role-nginx'
readonly REPO_ANSIBLE_USTREAMER='https://github.com/tiny-pilot/ansible-role-ustreamer'

readonly BUNDLE_DIR='bundle'
readonly OUTPUT_DIR='dist'

# Temporary workaround for applying the right naming schema to the TinyPilot
# Debian package. We should fold this naming logic into the workflow for
# creating the Debian package in
# https://github.com/tiny-pilot/tinypilot-bundler/issues/9.
rename_bundle_file() {
  # The filename of the TinyPilot Debian package.
  local OLD_TINYPILOT_DEBIAN_PACKAGE
  OLD_TINYPILOT_DEBIAN_PACKAGE="$(ls tinypilot*.deb)"

  local TIMESTAMP
  TIMESTAMP="$(date --iso-8601=minutes | sed 's/://g' | sed 's/+0000/Z/g')"
  local BUILD_VERSION
  BUILD_VERSION="$(git rev-parse --short HEAD)"

  local NEW_TINYPILOT_DEBIAN_PACKAGE="tinypilot-${TIMESTAMP}-${BUILD_VERSION}.deb"

  mv "${OLD_TINYPILOT_DEBIAN_PACKAGE}" "${NEW_TINYPILOT_DEBIAN_PACKAGE}"
  echo "${NEW_TINYPILOT_DEBIAN_PACKAGE}"
}

pushd "${BUNDLE_DIR}"

# TODO: Remove this wget and rename once we're creating the Debian package in
# the same workflow as the bundle.
# https://github.com/tiny-pilot/tinypilot-bundler/issues/9
wget "${PKG_URL_TINYPILOT}"
TINYPILOT_DEBIAN_PACKAGE="$(rename_bundle_file)"

# Copy each Ansible role dependency into the bundle and add a version file.
for GIT_URL in $REPO_ANSIBLE_TINYPILOT $REPO_ANSIBLE_NGINX $REPO_ANSIBLE_USTREAMER
do
  git clone \
    --depth 1 \
    --branch master \
    "${GIT_URL}"
  FOLDER_NAME="$(echo "${GIT_URL}" | sed 's|https://github.com/tiny-pilot/||' | sed 's|.git||')"
  pushd "${FOLDER_NAME}"
  git rev-parse --short HEAD > VERSION
  popd
done

# Remove all `.git/` folders.
find . \
  -type d \
  -name .git \
  -prune \
  -exec rm -rf {} \;

popd

# Make the bundle filename the same as the Debian package but with a different
# file extension.
BUNDLE_FILENAME="${TINYPILOT_DEBIAN_PACKAGE//.deb/.tar}"
readonly BUNDLE_FILENAME

# Generate build output.
mkdir -p "${OUTPUT_DIR}"
ls -lahR "${BUNDLE_DIR}" > "${OUTPUT_DIR}/files.txt"
tar \
  --create \
  --file "${OUTPUT_DIR}/${BUNDLE_FILENAME}" \
  --directory "${BUNDLE_DIR}" \
  .
