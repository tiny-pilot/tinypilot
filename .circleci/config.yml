version: 2.1
jobs:
  check_whitespace:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Check for trailing whitespace
          command: ./dev-scripts/check-trailing-whitespace
      - run:
          name: Check that all text files end in a trailing newline
          command: ./dev-scripts/check-trailing-newline
  check_bash:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.1
    steps:
      - run:
          name: Install dependencies
          command: apk add bash git openssh-client grep
      - checkout
      - run:
          name: Run static analysis on bash scripts
          command: ./dev-scripts/check-bash
  build_python:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: Create virtual environment
          command: python3 -m venv venv
      - run:
          name: Install requirements and run build script
          command: |
            . venv/bin/activate
            pip install --requirement requirements.txt
            pip install --requirement dev_requirements.txt
            ./dev-scripts/build-python
  build_javascript:
    docker:
      - image: circleci/node:14.17.5-stretch
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run build script
          command: ./dev-scripts/build-javascript
  build_bundle:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: sudo apt-get update && sudo apt-get install -y git libffi-dev libssl-dev python3-dev python3-venv wget
      - run:
          name: Create the bundle
          command: cd bundler && ./create-bundle
      - store_artifacts:
          path: bundler/dist/
      - persist_to_workspace:
          root: ./bundler
          paths:
            - ./dist
  upload_bundle:
    docker:
      - image: cimg/base:2020.01
    environment:
      UPLOAD_PATH: community/
    working_directory: /home/circleci/dist
    steps:
      - attach_workspace:
          at: ./dist
      - run: # DEBUG
          command: pwd && ls -l
      - run:
          name: create LATEST file
          command: set -x echo "$(ls tinypilot*.tar)" | tee LATEST
      - run:
          name: download Backblaze CLI tool
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://github.com/Backblaze/B2_Command_Line_Tool/releases/download/v3.4.0/b2-linux --output-document=b2
            chmod +x ./b2
            ./b2 version
      - run:
          name: authorize Backblaze CLI tool
          command: ./b2 authorize-account "${BACKBLAZE_KEY_ID}" "${BACKBLAZE_KEY}"
      - run:
          name: upload bundle to Backblaze
          command: ./b2 upload-file --noProgress "${UPLOAD_BUCKET}" "$(cat LATEST)" "${UPLOAD_PATH}/"
      - run:
          name: update LATEST file in bucket
          command: ./b2 upload-file --noProgress "${UPLOAD_BUCKET}" LATEST "${UPLOAD_PATH}/"
  e2e:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Run TinyPilot e2e tests
          command: ./e2e/docker-test
workflows:
  test:
    jobs:
      - check_whitespace
      - check_bash
      - build_python
      - build_javascript
      - build_bundle
      - upload_bundle:
          requires:
            - build_bundle
      - e2e:
          filters:
            branches:
              only: master
