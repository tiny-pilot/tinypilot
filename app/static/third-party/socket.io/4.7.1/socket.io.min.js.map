{"version":3,"file":"socket.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","socket","value","_get","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","packet","onPacket","details","onPause","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","encode","alphabet","map","seed","num","encoded","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","get","poll","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","_a","_this9","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","binaryFlag","reader","readable","getReader","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","TextEncoder","arrayBuffer","encodePacketToBinary","shouldIncludeBinaryHeader","of","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","_typeof","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","_len3","_key3","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","f","sent","_len6","_key6","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}