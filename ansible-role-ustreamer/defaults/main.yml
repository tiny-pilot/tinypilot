---
# Specifies the filesystem path or URL of a Debian package that installs
# uStreamer.
ustreamer_debian_package_path: null

ustreamer_repo: https://github.com/pikvm/ustreamer.git
ustreamer_repo_version: master

# Network interface to listen for connections.
ustreamer_interface: null

# Port to listen for connections.
ustreamer_port: null

# Path to video device, such as /dev/video1.
ustreamer_video_path: null

# Encoding method to use, such as `m2m-image`.
ustreamer_encoder: null

# Device input format, such as uyvy .
ustreamer_format: null

# Stream resolution, such as 1280x720.
ustreamer_resolution: null

# Desired frames per second.
ustreamer_desired_fps: null

# Number of workers.
ustreamer_workers: null

# Quality of the JPEG encoding from 1 to 100 (best).
ustreamer_quality: null

# Adjustment to stream brightness. This requires support from the
# capture hardware, and the value is an integer in some range
# depending on the hardware.
ustreamer_brightness: null

# Don't re-initialize device on timeout (for example when HDMI cable
# was disconnected). Can be either true or false.
ustreamer_persistent: null

# Use DV-timings.
ustreamer_use_dv_timings: null

# Number of same frames to drop.
ustreamer_drop_same_frames: null

# Set TCP_NODELAY to reduce buffering on video stream.
ustreamer_tcp_nodelay: null

# Presets to use for the video capture device.
# Options are:
#   * uvc - For a device that appears as a regular UVC video source.
#   * tc358743 - For HDMI to CSI devices based on the Toshiba TC358743 chip.
ustreamer_capture_device: null

# To create a new EDID:
#  1. Convert the existing EDID to binary using "edid2bin".
#  2. Edit the binary using "AW EDID Editor v.02.00.13".
#  3. Save the new EDID in binary format.
#  4. Convert the binary EDID to a hex EDID using "make-edid".
#    - Use the "--yaml" option if required.

# Note: You may need to perform a few extra steps in order for the EDID
# to conform to edid-decode's check - but only if the "Display Range Limits"
# block changes. This is due to a bug in AW EDID Editor v.02.00.13 that doesn't
# set the correct bytes.
# To work around this:
#  1. Open the new EDID in "AW EDID Editor v.3.0.10".
#  2. Save the EDID to set correct bytes in the "Display Range Limits" block
#  3. Re-open the EDID in "AW EDID Editor v.02.00.13" and re-set
#     the screen size dimensions to 0 (both vertical and horizontal)

# EDID for TC358743 chip.
ustreamer_edid: |
  00ffffffffffff005262769800888888
  2d1e0103800000781aee91a3544c9926
  0f50547fef8081c08140810081809500
  a9c081406140271f80f07138164038c0
  350000000000001eec2c80a070381a40
  3020350000000000001e000000fc0054
  696e7950696c6f740a202020000000fd
  00185a125010000a20202020202001aa
  02031ef14b010204131f2021223c3d3e
  2309070766030c00300080e2007f0000
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  0000000000000000000000000000008e

# Location to store EDID files.
ustreamer_edids_dir: /home/{{ ustreamer_user }}/edids

# Use the specified shared memory object to sink H264 frames encoded by MMAL
# (e.g., tinypilot::ustreamer::h264). Disabled by default.
ustreamer_h264_sink: null

# Set permissions bitmask for H264 shared memory object (e.g., 777). Defaults
# to 660 when not set.
ustreamer_h264_sink_mode: null

# Remove shared memory on stop (e.g., yes). Defaults to no when not set.
ustreamer_h264_sink_rm: null

# Set the bitrate in Kb/s for the H264 stream (e.g., 2000). The range of allowed
# values is [25, 20000]. Defaults to 5000 when not set.
ustreamer_h264_bitrate: null
