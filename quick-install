#!/usr/bin/env bash

# Echo commands to stdout.
set -x

if [ -z "$TINYPILOT_INSTALL_VARS" ]
then
  TINYPILOT_INSTALL_VARS=""
  echo "Using default install vars"
else
  echo "User-specified install vars: $TINYPILOT_INSTALL_VARS"
fi

# Check if this system uses the TC358743 HDMI to CSI capture bridge.
USE_TC358743_DEFAULTS=''
if [[ "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_capture_device=' ]]; then
  if [[ "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_capture_device=tc358743' ]]; then
    USE_TC358743_DEFAULTS='y'
  fi
# Only check the existing config file if user has not set
# ustreamer_capture_device install variable.
elif [ -f /home/ustreamer/config.yml ] && grep --silent 'capture_device: "tc358743"' /home/ustreamer/config.yml; then
  USE_TC358743_DEFAULTS='y'
fi

# If this system does not use a TC358743 capture chip, set defaults for any
# unset install variables.
if [ -z "$USE_TC358743_DEFAULTS" ]; then
  if [[ ! "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_encoder=' ]]; then
    TINYPILOT_INSTALL_VARS+=" ustreamer_encoder=hw"
  fi
  if [[ ! "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_format=' ]]; then
    TINYPILOT_INSTALL_VARS+=" ustreamer_format=jpeg"
  fi
  if [[ ! "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_resolution=' ]]; then
    TINYPILOT_INSTALL_VARS+=" ustreamer_resolution=1920x1080"
  fi
  if [[ ! "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_persistent=' ]]; then
    TINYPILOT_INSTALL_VARS+=" ustreamer_persistent=true"
  fi
  if [[ ! "$TINYPILOT_INSTALL_VARS" =~ 'ustreamer_desired_fps=' ]]; then
    TINYPILOT_INSTALL_VARS+=" ustreamer_desired_fps=30"
  fi
fi

# Treat undefined environment variables as errors.
set -u

# Exit on first error.
set -e

echo "Final install vars: $TINYPILOT_INSTALL_VARS"

sudo apt-get update
sudo apt-get install -y \
  git \
  libffi-dev \
  libssl-dev \
  python3-dev \
  python3-venv

INSTALLER_DIR="/opt/tinypilot-updater"
sudo mkdir -p "$INSTALLER_DIR"
sudo chown "$(whoami):$(whoami)" --recursive "$INSTALLER_DIR"
pushd "$INSTALLER_DIR"

python3 -m venv venv
. venv/bin/activate
# Ansible depends on wheel.
pip install wheel==0.34.2
pip install ansible==2.9.10
echo "[defaults]
roles_path = $PWD
interpreter_python = /usr/bin/python3
" > ansible.cfg

TINYPILOT_ROLE_NAME="mtlynch.tinypilot"
if [ -d "$TINYPILOT_ROLE_NAME" ]; then
  pushd "$TINYPILOT_ROLE_NAME"
  git pull origin master
  popd
else
  TINYPILOT_ROLE_REPO="https://github.com/mtlynch/ansible-role-tinypilot.git"
  git clone "$TINYPILOT_ROLE_REPO" "$TINYPILOT_ROLE_NAME"
fi

ansible-galaxy install --role-file "${TINYPILOT_ROLE_NAME}/requirements.yml"

echo "- hosts: localhost
  connection: local
  become: true
  become_method: sudo
  roles:
    - role: $TINYPILOT_ROLE_NAME" > install.yml
ansible-playbook -i localhost, install.yml --extra-vars "$TINYPILOT_INSTALL_VARS"
